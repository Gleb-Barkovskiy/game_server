name: Backend Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio httpx async-asgi-testclient fastapi sqlalchemy psycopg2-binary redis alembic pydantic-settings python-dotenv

    - name: Install project dependencies
      run: |
        pip install -r requirements.txt || true

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in {1..30}; do
          if pg_isready -h localhost -p 5432 -U testuser -d testdb; then
            echo "PostgreSQL is ready!"
            break
          fi
          echo "Waiting for PostgreSQL... ($i/30)"
          sleep 1
        done
      env:
        PGPASSWORD: testpassword

    - name: Apply migrations
      run: |
        alembic upgrade head
      env:
        DATABASE_URL: postgresql+asyncpg://testuser:testpassword@localhost:5432/testdb

    - name: Run tests
      env:
        DATABASE_URL: postgresql+asyncpg://testuser:testpassword@localhost:5432/testdb
        REDIS_URL: redis://localhost:6379/0
        JWT_SECRET_KEY: testsecret
        JWT_ALGORITHM: HS256
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
        LOCATION_LIST: '["Paris", "Tokyo Airport", "London Museum", "New York Subway", "Rome Colosseum", "Sydney Opera House"]'
      run: |
        pytest -v --asyncio-mode=auto